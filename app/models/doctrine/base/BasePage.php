<?php

/**
 * BasePage
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property integer $pageType
 * @property integer $min
 * @property integer $max
 * @property boolean $optional
 * @property boolean $showAnswerStatus
 * @property string $instructions
 * @property string $leadingText
 * @property string $trailingText
 * @property boolean $isGlobal
 * @property integer $parentID
 * @property PageType $PageType
 * @property Page $Parent
 * @property Doctrine_Collection $Children
 * @property Doctrine_Collection $Variables
 * @property Doctrine_Collection $Elements
 * @property ApplicationPage $ApplicationPage
 * @property Doctrine_Collection $Answer
 * 
 * @package    jazzee
 * @subpackage orm
 */
abstract class BasePage extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('page');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('pageType', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('min', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('max', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('optional', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('showAnswerStatus', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('instructions', 'string', 3000, array(
             'type' => 'string',
             'length' => '3000',
             ));
        $this->hasColumn('leadingText', 'string', 3000, array(
             'type' => 'string',
             'length' => '3000',
             ));
        $this->hasColumn('trailingText', 'string', 3000, array(
             'type' => 'string',
             'length' => '3000',
             ));
        $this->hasColumn('isGlobal', 'boolean', null, array(
             'type' => 'boolean',
             ));
        $this->hasColumn('parentID', 'integer', null, array(
             'type' => 'integer',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('PageType', array(
             'local' => 'pageType',
             'foreign' => 'id'));

        $this->hasOne('Page as Parent', array(
             'local' => 'parentID',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));

        $this->hasMany('Page as Children', array(
             'local' => 'id',
             'foreign' => 'parentID'));

        $this->hasMany('PageVariable as Variables', array(
             'local' => 'id',
             'foreign' => 'pageID'));

        $this->hasMany('Element as Elements', array(
             'local' => 'id',
             'foreign' => 'pageID'));

        $this->hasOne('ApplicationPage', array(
             'local' => 'id',
             'foreign' => 'pageID'));

        $this->hasMany('Answer', array(
             'local' => 'id',
             'foreign' => 'pageID'));
    }
}