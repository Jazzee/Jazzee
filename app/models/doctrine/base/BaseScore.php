<?php

/**
 * BaseScore
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $answerID
 * @property enum $scoreType
 * @property integer $scoreID
 * @property string $registrationNumber
 * @property integer $testMonth
 * @property integer $testYear
 * @property Answer $Answer
 * 
 * @package    jazzee
 * @subpackage orm
 */
abstract class BaseScore extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('score');
        $this->hasColumn('answerID', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('scoreType', 'enum', null, array(
             'type' => 'enum',
             'values' => 
             array(
              0 => 'gre',
              1 => 'toefl',
             ),
             ));
        $this->hasColumn('scoreID', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('registrationNumber', 'string', 255, array(
             'type' => 'string',
             'length' => '255',
             ));
        $this->hasColumn('testMonth', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('testYear', 'integer', null, array(
             'type' => 'integer',
             ));


        $this->index('applicant_score', array(
             'fields' => 
             array(
              0 => 'answerID',
              1 => 'scoreType',
              2 => 'scoreID',
             ),
             'type' => 'unique',
             ));
        $this->index('regnumber', array(
             'fields' => 
             array(
              0 => 'scoreType',
              1 => 'registrationNumber',
              2 => 'testMonth',
              3 => 'testYear',
             ),
             'type' => 'unique',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Answer', array(
             'local' => 'answerID',
             'foreign' => 'id',
             'onDelete' => 'CASCADE',
             'onUpdate' => 'CASCADE'));
    }
}