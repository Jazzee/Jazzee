---
JazzeeConfig:
  columns:
    name: 
      type: string(255)
      notnull: true
      unique: true
    value: blob

Cycle:
  columns:
    name: 
      type: string(50)
      notnull: true
      unique: true
      nospace: true
    start: timestamp
    end: timestamp
  checks:
    date_check: end > start

Program:
  columns:
    name: string(255)
    shortName:
      type: string(50)
      notnull: true
      nospace: true
      notblank: true
      unique: true
    expires: timestamp
    
Application:
  columns:
    programID:
      type: integer
      notnull: true
    cycleID:
      type: integer
      notnull: true
    contactName: string(255)
    contactEmail: 
      type: string(255)
      notnull: true
    contactPhone: string(13)
    welcome: string(4000)
    open: timestamp
    close: timestamp
    begin: timestamp
    feeForeign: decimal
    feeDomestic: decimal
    live: boolean
    visible: boolean
    admitLetter: string(4000)
    denyLetter: string(4000)
    requireGRE: integer(1)
    requireGRESubject: integer(1)
    requireTOEFL: integer(1)
    statusPageText: string(4000)
  indexes:
    program_cycle: 
      fields: [programID, cycleID]
      type: unique
  relations:
    Program:
      foreignAlias: Applications
      local: programID
      foreign: id
      onDelete: CASCADE
      onUpdate: CASCADE
    Cycle:
      local: cycleID
      foreign: id
      onDelete: CASCADE
      onUpdate: CASCADE

Page:
  columns:
    title: string(255)
    pageType: integer
    min: integer
    max: integer
    optional: boolean
    instructions: string(3000)
    leadingText: string(3000)
    trailingText: string(3000)
  relations:
    PageType:
      local: pageType
      foreign: id

GlobalPage:
  columns:
    pageID:
      type: integer
      primary: true
    cycleID:
      type: integer
      primary: true
  relations:
    Page:
      local: pageID
      foreign: id
      onDelete: CASCADE
      onUpdate: CASCADE
    Cycle:
      local: cycleID
      foreign: id
      onDelete: CASCADE
      onUpdate: CASCADE

PageType:
  columns:
    name:
      type: string(255)
      notnull: true
      unique: true
    class:
      type: string(255)
      notnull: true
      unique: true
      
PageVariable:
  columns:
    pageID: integer
    variableName: string(255)
    value: blob
  indexes:
    page_variable: 
      fields: [pageID, variableName]
      type: unique
  relations:
    Page:
      local: pageID
      foreign: id
      onDelete: CASCADE
      onUpdate: CASCADE
      
Element:
  columns:
    pageID: integer
    elementType: integer
    title: string(255)
    format: string(255)
    instructions: string(3000)
    defaultValue: string(255)
    required: boolean
    min: double
    max: double
  relations:
    Page:
      local: pageID
      foreign: id
      foreignAlias: Elements
      onDelete: CASCADE
      onUpdate: CASCADE
    ElementType:
      local: elementType
      foreign: id

ElementType:
  columns:
    name:
      type: string(255)
      notnull: true
      unique: true
    class:
      type: string(255)
      notnull: true
      unique: true
      
ElementListItem:
  columns:
    elementID: integer
    weight: integer
    active: 
      type: boolean
      default: true
    value: string(255)
  relations:
    Element:
      local: elementID
      foreign: id
      foreignAlias: ListItems
      onDelete: CASCADE
      onUpdate: CASCADE
      
ApplicationPage:
  columns:
    applicationID: integer
    pageID: integer
    weight: 
      type: integer
      default: 0
    title: string(255)
    min: integer
    max: integer
    optional: boolean
    instructions: string(3000)
    leadingText: string(3000)
    trailingText: string(3000)
  relations:
    Application:
      local: applicationID
      foreign: id
      foreignAlias: Pages
      onDelete: CASCADE
      onUpdate: CASCADE
    Page:
      local: pageID
      foreign: id
      foreignType: one
      onDelete: CASCADE
      onUpdate: CASCADE

RecommendationPage:
  columns:
    applicationPageID: integer
    lorPageID: integer
    deadline: timestamp
    recommenderEmail: string(10000)
  relations:
    ApplicationPage:
      local: applicationPageID
      foreign: id
      foreignType: one
      onDelete: CASCADE
      onUpdate: CASCADE
    Page:
      local: lorPageID
      foreign: id
      foreignType: one
      alias: LORPage
      onDelete: CASCADE
      onUpdate: CASCADE
      
Applicant:
  columns: 
    applicationID: integer
    email:
      type: string(255)
      notnull: true
      notblank: true
    password:
      type: string(60)
      notnull: true
      notblank: true
    activate_token:
      type: string(40)
      unique: true
    locked: timestamp
    firstName: string(255)
    middleName: string(255)
    lastName: string(255)
    suffix: string(255)
    deadlineExtension: timestamp
    lastLogin: timestamp
    lastLogin_ip: 
      type: string(15)
      ip: true
    lastFailedLogin_ip:
      type: string(15)
      ip: true
    failedLoginAttempts: integer(2)
    createdAt: timestamp
    updatedAt: timestamp
  indexes:
    application_email: 
      fields: [applicationID, email]
      type: unique
  relations:
    Application:
      foreignAlias: Applicants
      local: applicationID
      foreign: id
      onDelete: CASCADE
      onUpdate: CASCADE
    
Attachment:
  columns:
    applicantID: integer
    attachment: blob
  relations:
    Applicant:
      local: applicantID
      foreign: id
      foreignAlias: Attachments
      onDelete: CASCADE
      onUpdate: CASCADE

Duplicate:
  columns:
    applicantID: integer
    duplicateID: integer
    disergard: boolean
  relations:
    OriginalApplicant:
      class: Applicant
      foreignAlias: Duplicates
      local: applicantID
      foreign: id
      onDelete: CASCADE
      onUpdate: CASCADE
    DuplicateApplicant:
      class: Applicant
      local: duplicateID
      foreign: id
      onDelete: CASCADE
      onUpdate: CASCADE

Decision:
  columns:
    applicantID: integer
    nominateAdmit: timestamp
    nominateDeny: timestamp
    finalAdmit: timestamp
    finalDeny: timestamp
    offerResponseDeadline: timestamp
    decisionLetterSent: timestamp
    decisionLetterViewed: timestamp
    acceptOffer: timestamp
    declineOffer: timestamp
  relations:  
    Applicant:
      local: applicantID
      foreign: id
      foreignType: one
      onDelete: CASCADE
      onUpdate: CASCADE

ApplicantVariable:
  columns:
    applicantID: integer
    variableName: string(255)
    value: blob
  indexes:
    applicant_variable: 
      fields: [applicantID, variableName]
      type: unique
  relations:
    Applicant:
      local: applicantID
      foreignAlias: Variables
      foreign: id
      onDelete: CASCADE
      onUpdate: CASCADE
      
Communication:
  columns:
    parentID: integer
    senderID: integer
    recipientID: integer
    senderType: 
      type: enum
      values: [applicant, user]
    recipientType: 
      type: enum
      values: [applicant, user]
    text: string(4000)
  actAs:
    Timestampable:
  relations:
    Parent:
      class: Communication
      local: parentID
      foreign: id
      foreignAlias: Reply
      
Payment:
  columns:
    applicantID: integer
    paymentTypeID: integer
    amount: double
    approvalCode: string(255)
    transactionId: integer
    checkNumber: integer
    rechargeAccount: string(255)
  relations:
    Applicant:
      local: applicantID
      foreign: id
      onUpdate: CASCADE
    PaymentType:
      local: paymentTypeID
      foreign: id

PaymentType:
  columns:
    name: string(255)

Answer:
  columns:
    applicantID: integer
    pageID: integer
    publicStatus: integer
    privateStatus: integer
    attachment: blob
    updatedAt: timestamp
  relations:
    Applicant:
      local: applicantID
      foreign: id
      foreignAlias: Answers
      onDelete: CASCADE
      onUpdate: CASCADE
    Page:
      local: pageID
      foreign: id
      onDelete: CASCADE
      onUpdate: CASCADE
    PublicStatus:
      class: StatusType
      local: publicStatus
      foreign: id
    PrivateStatus:
      class: StatusType
      local: privateStatus
      foreign: id

StatusType:
  columns:
    name: string(255)

ElementAnswer:
  columns:
    answerID:
      type: integer
      primary: true
    elementID:
      type: integer
      primary: true
    position:
      type: integer
      primary: true
      default: 0
    eShortString: string(255)
    eLongString: string(10000)
    eDate: timestamp
    eInteger: integer
    eDecimal: decimal
    eBlob: blob
  relations:
    Answer:
      local: answerID
      foreign: id
      foreignAlias: Elements
      onDelete: CASCADE
      onUpdate: CASCADE
    Element:
      local: elementID
      foreign: id
      onDelete: CASCADE
      onUpdate: CASCADE

Recommendation:
  columns:
    recommendationPageID: integer
    answerID: 
      type: integer
      unique: true
    LORAnswerID: 
      type: integer
      unique: true
    urlKey:
      type: string(255)
      unique: true
      notnull: true
    email:
      type: string(255)
      notnull: true
    waiveViewRight: boolean
    invitationSent: timestamp
  relations:
    Answer:
      local: answerID
      foreign: id
      foreignType: one
      onDelete: CASCADE
      onUpdate: CASCADE
    LORAnswer:
      class: Answer
      local: LORAnswerID
      foreign: id
      foreignType: one
      onDelete: CASCADE
      onUpdate: CASCADE
    RecommendationPage:
      local: recommendationPageID
      foreign: id
      onDelete: CASCADE
      onUpdate: CASCADE

Citizenship:
  columns:
    answerID: integer
    citizenship: string(32)
    birthCity: string(255)
    birthState: string(32)
    birthCountry: string(32)
    stateResident: boolean
    citizenshipCountry: string(32)
    permanentResidentDate: timestamp
    visaType: string(32)
  relations:
    Answer:
      local: answerID
      foreign: id
      foreignType: one
      onDelete: CASCADE
      onUpdate: CASCADE
  
Score:
  columns:
    answerID: integer
    scoreType: 
      type: enum
      values: [gre,toefl]
    scoreID: integer
    registrationNumber: integer
  indexes:
    applicant_score: 
      fields: [answerID, scoreType, scoreID]
      type: unique
    regnumber: 
      fields: [answerID, scoreType, registrationNumber]
      type: unique
  relations:
    Answer:
      local: answerID
      foreign: id
      foreignType: one
      onDelete: CASCADE
      onUpdate: CASCADE
      
GREScore:
  tableName: gre_score
  columns:
    registrationNumber: 
      type: integer
      unique: true
    departmentCode: string(4)
    departmentName: string(30)
    firstName: string(255)
    middleInitial: string(1)
    lastName: string(255)
    birthDate: date
    sex: string(1)
    testDate: date
    testCode: string(2)
    testName: string(32)
    score1Type: string(1)
    score1Converted: int(3)
    score1Percentile: decimal
    score2Type: string(1)
    score2Converted: int(3)
    score2Percentile: decimal
    score3Type: string(1)
    score3Converted: int(3)
    score3Percentile: decimal
    score4Type: string(1)
    score4Converted: int(4)
    score4Percentile: decimal
    sequenceNumber: integer(4)
    recordSerialNumber: integer(2)
    cycleNumber: integer    
    processDate: date
      
TOEFLScore:
  tableName: toefl_score
  columns:
    registrationNumber: 
      type: integer
      unique: true
    departmentCode: string(4)
    firstName: string(255)
    middleName: string(255)
    lastName: string(255)
    birthDate: date
    sex:
      type: enum
      values: [m,f]
    nativeCountry: string(255)
    nativeLanguage: string(255)
    testDate: date
    testType: string(255)
    listeningIndicator: int(1)
    speakingIndicator: int(1)
    IBTListening: int(2)
    IBTWriting: int(2)
    IBTSpeaking: int(2)
    IBTReading: int(2)
    IBTTotal: int(3)
    TSEScore: int(2)
    listening: int(2)
    writing: int(2)
    reading: int(2)
    essay: int(2)
    total: int(3)
    timesTaken: int(1)
    offTopic: boolean

AuditLog:
  columns:
    userID:
      type: integer(64)
      notnull: true
      readonly: true
    log:
      type: string(3000)
      notnull: true
      readonly: true
  actAs:
    Timestampable:
      updated: 
        disabled: true

AdminVariable:
  columns:
    name: string(255)
    value: blob
  indexes:
    variable_name: 
      fields: [name]
      type: unique

User:
  columns:
    campusID:
      type: string(60)
      unique: true
    email:
      type: string(255)
      notnull: true
      notblank: true
      unique: true
    password:
      type: string(60)
    activateToken:
      type: string(40)
      unique: true
    firstName: string(255)
    lastName: string(255)
    expires: timestamp
    lastLogin: timestamp
    lastLogin_ip: 
      type: string(15)
      ip: true
    lastFailedLogin_ip:
      type: string(15)
      ip: true
    failedLoginAttempts: integer(2)
    apiKey:
      type: string(40)
      unique: true
    privateSSLKey: blob
    publicSSLKey: blob
    globalPrivateSSLKey: blob
    defaultProgram: integer
    defaultCycle: integer
  relations:
    Program:
      foreignAlias: DefaultUsers
      local: defaultProgram
      foreign: id
      onDelete: SET NULL
      onUpdate: CASCADE
    Cycle:
      foreignAlias: DefaultUsers
      local: defaultCycle
      foreign: id
      onDelete: SET NULL
      onUpdate: CASCADE

UserRole:
  columns:
    userID: integer
    roleID: integer
  relations:
    User:
      foreignAlias: Roles
      local: userID
      foreign: id
      onDelete: CASCADE
      onUpdate: CASCADE
    Role:
      foreignAlias: Users
      local: roleID
      foreign: id
      onDelete: CASCADE
      onUpdate: CASCADE

Role:
  columns:
    name: string(255)
    global: boolean
    programID: integer
  relations:
    Program:
      foreignAlias: Roles
      local: programID
      foreign: id
      onDelete: CASCADE
      onUpdate: CASCADE
    
RoleAction:
  columns:
    roleID: integer
    controller: string(255)
    action: string(255)
  relations:
    Role:
      foreignAlias: Actions
      local: roleID
      foreign: id
      onDelete: CASCADE
      onUpdate: CASCADE