<?xml version="1.0" encoding="UTF-8"?>

<project name="Jazzee" default="build" basedir='.'>
 <property name="source" location="."/>
 <property name="build" value="build"/>
 <property name="apidocsdestination" value="build/apidocs"/>
 <property name="userdocsdestination" value="build/userdocs"/>

 <target name="clean"
         description="Clean up and create build directories">
  <delete dir="${build}/jazzee"/>
  <mkdir dir="${build}/jazzee"/>
  </target>

  <target name="src" description="Prepares a clean source tree">
    <copy todir="${build}/jazzee">
      <fileset dir="${source}" includes="etc/ src/ webroot/ setup/ var/ vendor/ lib/"/>
      <fileset dir="${source}/etc" excludes="config.ini.php"/>
    </copy>
 </target>

 <target name="composer" description="Install dependencies using composer">
    <get src="http://getcomposer.org/installer" dest="${build}/composerinstaller"/>
    <exec executable="php" failonerror="true">
      <arg value="${build}/composerinstaller" />
      <arg line="--install-dir=${build}" />
    </exec>
    <exec executable="php" failonerror="true">
      <arg value="${build}/composer.phar" />
      <arg value="install" />
    </exec>
  </target>

 <target name="export" depends="clean,composer,src"/>
 <target name="archive" depends="export">
   <exec executable="git" outputproperty="build.version">
     <arg value="describe"/>
     <arg value="--tags"/>
     <arg value="--abbrev=0"/>
   </exec>
   <delete dir="${build}/archive"/>
   <mkdir dir="${build}/archive"/>
   <move file="${build}/jazzee" tofile="${build}/archive/jazzee-${build.version}" />
   <tar destfile="${basedir}/build/jazzee-${build.version}.tar.gz" basedir="${basedir}/build/archive" compression="gzip" longfile="gnu" />
 </target>

  <target name="apidocs" description="Build API Documentation">
   <exec executable="apigen">
     <arg line="--source ${source}/src" />
     <arg line="--destination '${apidocsdestination}'"/>
     <arg value="--quiet"/>
     <arg line="--title 'Jazzee API'"/>
     <arg line="--base-url 'http://api.jazzee.org'"/>
   </exec>
  </target>

  <target name="userdocs" description="Build User Documentation">
   <exec executable="sphinx-build">
     <arg line="-b html"/>
     <arg value="-q"/>
     <arg value="${source}/docs" />
     <arg value="${userdocsdestination}"/>
   </exec>
  </target>

 <target name="phpcs"
         description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpcs">
   <arg value="--standard=${basedir}/buildconfig/phpcs.xml" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="phpcs-ci"
         description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
  <exec executable="phpcs" output="/dev/null">
   <arg value="--report=checkstyle" />
   <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
   <arg value="--standard=${basedir}/buildconfig/phpcs.xml" />
   <arg path="${basedir}/src" />
  </exec>
 </target>

 <target name="phpmd"
         description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpmd">
   <arg path="${basedir}/src" />
   <arg value="text" />
   <arg value="${basedir}/buildconfig/phpmd.xml" />
  </exec>
 </target>

 <target name="phpmd-ci"
         description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
  <exec executable="phpmd">
   <arg path="${basedir}/src" />
   <arg value="xml" />
   <arg value="${basedir}/build/phpmd.xml" />
   <arg value="--reportfile" />
   <arg value="${basedir}/build/logs/pmd.xml" />
  </exec>
 </target>

</project>